* Idris Development Notes

- Edwin's paper, [[https://eb.host.cs.st-andrews.ac.uk/drafts/impldtp.pdf][Idris, a General Purpose Dependently Typed Programming
  Language: Design and Implementation]]. Covers =TT=, the elaboration monad,
  tactic-based elaboration and more.

- [[http://idris.readthedocs.io/en/latest/reference/internals.html][Idris' Internals]]

- "A Look at the Idris Internals" series by Paul KÃ¶rbitz.

  - [[http://koerbitz.me/posts/A-Look-at-the-Idris-Internals-Part-I-Overview-and-Parsing.html][Part I: Overview and Parsing]]
  - [[http://koerbitz.me/posts/A-Look-at-the-Idris-Internals-Part-II-Taking-the-Parser-for-a-Spin.html][Part II: Taking the Parser for a Spin]]
  - [[http://koerbitz.me/posts/A-Look-at-the-Idris-Internals-Part-III-From-Parsing-to-Elaboration.html][Part III: From Parsing to Elaboration]]
  - [[http://koerbitz.me/posts/A-Look-at-the-Idris-Internals-Part-IV-From-TT-Onward.html][Part IV: From TT Onward]]


** Backend/Codegen
 
- Edwin's paper on backend/codegen: [[https://eb.host.cs.st-andrews.ac.uk/drafts/compile-idris.pdf][Cross-platform Compilers for Functional Languages]].
- Edwin's example backend/codegen: [[https://github.com/edwinb/idris-php/][idris-php]].
- Other backends/codegens:
  - [[https://github.com/mmhelloworld/idris-jvm/][mmhelloworld/idris-jvm]]
  - [[https://github.com/bamboo/idris-cil/][bamboo/idris-cil]]
- [[https://github.com/idris-lang/Idris-dev/wiki/Idris-back-end-IRs][Idris-backend-IRs]]
- Levels of backend IR:
  - 0. (IR/case) = ??? FIXME: Does this exist?
  - 1. LDecl (IR/lift) = [Lambda] Lifted Decl = lambda-lifted untyped lambda calculus
  - 2. DDecl (IR/defunc) = Defunctionalised Decl = defunctionalised untyped lambda calculus
  - 3. SDecl (IR/ANF) = Simplified Decl = ANF


** Abbreviations

  - =PDecl= :: Program declaration. Essentially top of AST.
  - =PTerm= :: Program Term. The parameter for PDecl. i.e. =type PDecl = PDecl' PTerm=.
  - =FC= :: probably short for FileContext. Contains source positions produced by Parser.


** Build times (iMac late 2009)

  - Clean build but dependencies already built (Stack, GHC 8.0.1)
    - =modularise-ast= 
      - 891.74 real  819.78 user  29.68 sys --- (14.86 minutes)
      - 922.26 real  828.76 user  33.22 sys --- (15.37 minutes)
    - =master=
      - 770.54 real  669.36 user  26.31 sys --- (12.84 minutes)
